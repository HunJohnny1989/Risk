/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import java.awt.*;
import javax.swing.*;
import model.dto.GameField;
import model.dto.Phase;

/**
 *
 * @author Eszti
 */
public class MainWindow extends JFrame {

    private Controller controller;

    /**
     * Creates new form MainWindow
     */
    public MainWindow(Controller controller) {
        this.controller = controller;
        initComponents();
        this.jButtonAction.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        surface1 = new view.Surface(controller);
        toolBar = new javax.swing.JToolBar();
        jLabel2 = new javax.swing.JLabel();
        jLabelCurrentAction = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        jLabelCurrentPlayer = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel3 = new javax.swing.JLabel();
        jLabelMission = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        RiskCardLabel = new javax.swing.JLabel();
        RiskCardComboBox = new javax.swing.JComboBox<>();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0));
        RiskCardExchangeButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jButtonAction = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rizik√≥");
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setMinimumSize(Toolkit.getDefaultToolkit().getScreenSize());
        setResizable(false);
        setSize(Toolkit.getDefaultToolkit().getScreenSize());

        surface1.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout surface1Layout = new javax.swing.GroupLayout(surface1);
        surface1.setLayout(surface1Layout);
        surface1Layout.setHorizontalGroup(
            surface1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1094, Short.MAX_VALUE)
        );
        surface1Layout.setVerticalGroup(
            surface1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 374, Short.MAX_VALUE)
        );

        toolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        jLabel2.setText("Current activity: ");
        toolBar.add(jLabel2);

        jLabelCurrentAction.setText("Nothing");
        toolBar.add(jLabelCurrentAction);

        jSeparator1.setPreferredSize(new java.awt.Dimension(20, 0));
        toolBar.add(jSeparator1);

        jLabel1.setText("Current player: ");
        toolBar.add(jLabel1);

        jLabelCurrentPlayer.setText("Nobody");
        toolBar.add(jLabelCurrentPlayer);

        jSeparator2.setMaximumSize(new java.awt.Dimension(10, 32767));
        jSeparator2.setMinimumSize(new java.awt.Dimension(10, 10));
        jSeparator2.setPreferredSize(new java.awt.Dimension(20, 0));
        toolBar.add(jSeparator2);

        jLabel3.setText("Your mission: ");
        toolBar.add(jLabel3);

        jLabelMission.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelMission.setText("Nothing");
        jLabelMission.setAlignmentX(0.5F);
        jLabelMission.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabelMission.setName(""); // NOI18N
        toolBar.add(jLabelMission);

        jSeparator3.setMaximumSize(new java.awt.Dimension(10, 32767));
        jSeparator3.setMinimumSize(new java.awt.Dimension(10, 10));
        jSeparator3.setPreferredSize(new java.awt.Dimension(20, 0));
        toolBar.add(jSeparator3);

        RiskCardLabel.setText("Your risk cards: ");
        toolBar.add(RiskCardLabel);

        RiskCardComboBox.setMaximumRowCount(3);
        RiskCardComboBox.setMaximumSize(new java.awt.Dimension(150, 32767));
        RiskCardComboBox.setMinimumSize(new java.awt.Dimension(150, 22));
        RiskCardComboBox.setPreferredSize(new java.awt.Dimension(150, 22));
        toolBar.add(RiskCardComboBox);
        toolBar.add(filler2);

        RiskCardExchangeButton.setText("Exchange");
        RiskCardExchangeButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        RiskCardExchangeButton.setFocusable(false);
        RiskCardExchangeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        RiskCardExchangeButton.setMargin(new java.awt.Insets(5, 12, 5, 12));
        RiskCardExchangeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        RiskCardExchangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RiskCardExchangeButtonActionPerformed(evt);
            }
        });
        toolBar.add(RiskCardExchangeButton);
        toolBar.add(filler1);

        jButtonAction.setText("Finish attack");
        jButtonAction.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonAction.setFocusable(false);
        jButtonAction.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAction.setMargin(new java.awt.Insets(5, 12, 5, 12));
        jButtonAction.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActionActionPerformed(evt);
            }
        });
        toolBar.add(jButtonAction);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(surface1, javax.swing.GroupLayout.DEFAULT_SIZE, 1094, Short.MAX_VALUE)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 1094, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(surface1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
        );

        surface1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionActionPerformed
        if (controller.getCurrentPlayer().getPlayerId() != controller.getClientPlayerId()) {
            return;
        }
        if (Phase.ATTACK.equals(controller.getCurrentPhase())) {
            surface1.resetSurface();
            controller.finishAttack();
        } else {
            surface1.resetSurface();
            controller.finishRegroup();
        }

        surface1.resetSurface();
    }//GEN-LAST:event_jButtonActionActionPerformed

    private void RiskCardExchangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RiskCardExchangeButtonActionPerformed
        this.controller.getCurrentPlayer().redeemRiskCards();
        this.refreshRiskCards(this.controller.getCurrentPlayer());
        this.setRiskCardsCanBeExchanged(this.controller.getCurrentPlayer().canRiskCardsBeRedeemed());
    }//GEN-LAST:event_RiskCardExchangeButtonActionPerformed

    public void refreshRiskCards(model.Player player) {
        this.RiskCardComboBox.removeAllItems();
        this.RiskCardComboBox.addItem(player.getNumOfInfantry() + " Infantry");
        this.RiskCardComboBox.addItem(player.getNumOfCavalry() + " Cavalry");
        this.RiskCardComboBox.addItem(player.getNumOfArtillery() + " Artillery");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> RiskCardComboBox;
    private javax.swing.JButton RiskCardExchangeButton;
    private javax.swing.JLabel RiskCardLabel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButtonAction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCurrentAction;
    private javax.swing.JLabel jLabelCurrentPlayer;
    private javax.swing.JLabel jLabelMission;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private view.Surface surface1;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables

    public void setGameField(GameField gameField) {
        surface1.setGameField(gameField);
    }

    public void setPlayer(model.Player player) {
        jLabelCurrentPlayer.setText(player.getName() + " (" + player.getColor() + ")");
        this.refreshRiskCards(player);
        if (controller.getCurrentPhase() == model.dto.Phase.PLACE_TROOPS) {
            this.setRiskCardsCanBeExchanged(controller.getCurrentPlayer().canRiskCardsBeRedeemed());
        } else {
            this.setRiskCardsCanBeExchanged(false);
        }
    }

    public void setGamePhase(Phase gamePhase) {
        jLabelCurrentAction.setText(gamePhase.toString());
        String actionButtonString = null;
        switch (gamePhase) {
            case PLACE_TROOPS:
                actionButtonString = null;
                break;
            case ATTACK:
                actionButtonString = "Finish attack";
                break;
            case REGROUP:
                actionButtonString = "Cancel regroupping";
                break;
        }
        this.setActionButtonString(actionButtonString);
    }

    public void setActionButtonString(String actionButtonString) {
        if (actionButtonString == null) {
            this.jButtonAction.setVisible(false);
        } else {
            this.jButtonAction.setText(actionButtonString);
            this.jButtonAction.setVisible(true);
        }
    }

    public void setMissionString(String missionString) {
        this.jLabelMission.setText(missionString);
    }

    public void setRiskCardsCanBeExchanged(Boolean exchangable) {
        this.RiskCardExchangeButton.setVisible(exchangable);
    }

    public void repaint() {
        this.surface1.repaint();
    }
}
